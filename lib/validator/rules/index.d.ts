export class Rules {
    static rules: {
        custom: typeof import("./Custom");
        date: typeof import("./Date");
        day: typeof import("./Day");
        email: typeof import("./Email");
        json: typeof import("./JSON");
        mask: typeof import("./Mask");
        max: typeof import("./Max");
        maxDate: typeof import("./MaxDate");
        maxLength: typeof import("./MaxLength");
        maxWords: typeof import("./MaxWords");
        maxYear: typeof import("./MaxYear");
        min: typeof import("./Min");
        minDate: typeof import("./MinDate");
        minLength: typeof import("./MinLength");
        minWords: typeof import("./MinWords");
        minYear: typeof import("./MinYear");
        pattern: typeof import("./Pattern");
        required: typeof import("./Required");
        select: typeof import("./Select");
        unique: typeof import("./Unique");
        url: typeof import("./Url");
    };
    static addRule(name: any, rule: any): void;
    static addRules(rules: any): void;
    static getRule(name: any): any;
    static getRules(): {
        custom: typeof import("./Custom");
        date: typeof import("./Date");
        day: typeof import("./Day");
        email: typeof import("./Email");
        json: typeof import("./JSON");
        mask: typeof import("./Mask");
        max: typeof import("./Max");
        maxDate: typeof import("./MaxDate");
        maxLength: typeof import("./MaxLength");
        maxWords: typeof import("./MaxWords");
        maxYear: typeof import("./MaxYear");
        min: typeof import("./Min");
        minDate: typeof import("./MinDate");
        minLength: typeof import("./MinLength");
        minWords: typeof import("./MinWords");
        minYear: typeof import("./MinYear");
        pattern: typeof import("./Pattern");
        required: typeof import("./Required");
        select: typeof import("./Select");
        unique: typeof import("./Unique");
        url: typeof import("./Url");
    };
}
